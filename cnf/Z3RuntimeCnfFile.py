# This file was generated at runtime on 2019-03-08 03:11:39.966092
from z3 import *

class Z3RuntimeCnfFile():
	def __init__(self):
		self.finalFormula = ""
		self.satisfiability = ""
		self.modelForViolation = ""

	def execute(self):
		CURRENT_DATE0 = Real('CURRENT_DATE0')
		PROVINCE0 = Real('PROVINCE0')
		A_MODEL0 = Real('A_MODEL0')
		NAME0 = Real('NAME0')
		PHONE_NUMBER1 = Real('PHONE_NUMBER1')
		GET_MAX_COURIER_ID1 = Real('GET_MAX_COURIER_ID1')
		V_CONTRACT_TYPE_ID0 = Real('V_CONTRACT_TYPE_ID0')
		ID0 = Real('ID0')
		CAR_LICENSE_NUMBER0 = Real('CAR_LICENSE_NUMBER0')
		V_COURIER_ID2 = Real('V_COURIER_ID2')
		WAREHOUSE_ID0 = Real('WAREHOUSE_ID0')
		COUNTRY_ID1 = Real('COUNTRY_ID1')
		SALARY0 = Real('SALARY0')
		WAREHOUSE_ID1 = Real('WAREHOUSE_ID1')
		A_COUNTRY0 = Real('A_COUNTRY0')
		A_CONTRACT_TYPE0 = Real('A_CONTRACT_TYPE0')
		APARTMENT_NUMBER1 = Real('APARTMENT_NUMBER1')
		V_DRIVING_LICENSE_CATEGORY_ID0 = Real('V_DRIVING_LICENSE_CATEGORY_ID0')
		STREET0 = Real('STREET0')
		A_CAR_LICENSE_NUMBER0 = Real('A_CAR_LICENSE_NUMBER0')
		CONTRACT_START0 = Real('CONTRACT_START0')
		A_NAME0 = Real('A_NAME0')
		A_SALARY0 = Real('A_SALARY0')
		V_COURIER_ID0 = Real('V_COURIER_ID0')
		PROVINCE1 = Real('PROVINCE1')
		A_HOUSE_NUMBER0 = Real('A_HOUSE_NUMBER0')
		A_PROVINCE0 = Real('A_PROVINCE0')
		V_COUNTRY_ID0 = Real('V_COUNTRY_ID0')
		SALARY1 = Real('SALARY1')
		A_POSTAL_CODE0 = Real('A_POSTAL_CODE0')
		CITY0 = Real('CITY0')
		PESEL1 = Real('PESEL1')
		COURIER_ID1 = Real('COURIER_ID1')
		A_PRODUCTION_YEAR0 = Real('A_PRODUCTION_YEAR0')
		A_DRIVING_LICENSE_CATEGORY0 = Real('A_DRIVING_LICENSE_CATEGORY0')
		A_STREET0 = Real('A_STREET0')
		SURNAME0 = Real('SURNAME0')
		CONTRACT_START1 = Real('CONTRACT_START1')
		ID1 = Real('ID1')
		A_SERVICING_VALID_THRU0 = Real('A_SERVICING_VALID_THRU0')
		SURNAME1 = Real('SURNAME1')
		A_LOAD_CAPACITY0 = Real('A_LOAD_CAPACITY0')
		COUNTRY_ID0 = Real('COUNTRY_ID0')
		A_APARTMENT_NUMBER0 = Real('A_APARTMENT_NUMBER0')
		A_WAREHOUSE_ID0 = Real('A_WAREHOUSE_ID0')
		APARTMENT_NUMBER0 = Real('APARTMENT_NUMBER0')
		V_COURIER_ID1 = Real('V_COURIER_ID1')
		PHONE_NUMBER0 = Real('PHONE_NUMBER0')
		POSTAL_CODE0 = Real('POSTAL_CODE0')
		STREET1 = Real('STREET1')
		A_PHONE_NUMBER0 = Real('A_PHONE_NUMBER0')
		CONTRACT_TYPE1 = Real('CONTRACT_TYPE1')
		POSTAL_CODE1 = Real('POSTAL_CODE1')
		HOUSE_NUMBER1 = Real('HOUSE_NUMBER1')
		A_PESEL0 = Real('A_PESEL0')
		V_CONTRACT_START1 = Real('V_CONTRACT_START1')
		CAR_LICENSE_NUMBER1 = Real('CAR_LICENSE_NUMBER1')
		V_COURIER_ID4 = Real('V_COURIER_ID4')
		MAX_ID0 = Real('MAX_ID0')
		CITY1 = Real('CITY1')
		V_CONTRACT_START0 = Real('V_CONTRACT_START0')
		HOUSE_NUMBER0 = Real('HOUSE_NUMBER0')
		CONTRACT_TYPE0 = Real('CONTRACT_TYPE0')
		A_TRUNK_CAPACITY0 = Real('A_TRUNK_CAPACITY0')
		V_COURIER_ID3 = Real('V_COURIER_ID3')
		NAME1 = Real('NAME1')
		A_SURNAME0 = Real('A_SURNAME0')
		A_BRAND0 = Real('A_BRAND0')
		PESEL0 = Real('PESEL0')
		A_CITY0 = Real('A_CITY0')

		s = Solver()
		s.add(True)
		s.add(Implies( True, And( MAX_ID0 > 0, ID0 > 0 ) ))
		s.add(True)
		s.add(Implies( True, ( GET_MAX_COURIER_ID1 ) == ( MAX_ID0 ) ))
		s.add(True)
		s.add(Implies( True, ( GET_MAX_COURIER_ID1 ) == ( V_COURIER_ID1 ) ))
		s.add(True)
		s.add(Implies( True, ( V_COURIER_ID2 ) == ( ( 1 ) ) ))
		s.add(True)
		s.add(Implies( True, V_COURIER_ID3 == V_COURIER_ID2 ))
		s.add(True)
		s.add(Implies( True, ( V_COURIER_ID4 ) == ( ( V_COURIER_ID1 + 1 ) ) ))
		s.add(True)
		s.add(Implies( True, V_COURIER_ID3 == V_COURIER_ID4 ))
		s.add(True)
		s.add(Implies( True, ( V_CONTRACT_START1 ) == ( ( CURRENT_DATE0 ) ) ))
		s.add(True)
		s.add(Implies( True, ( ID1 ) == ( V_COURIER_ID3 ) ))
		s.add(True)
		s.add(Implies( True, ( PESEL1 ) == ( A_PESEL0 ) ))
		s.add(True)
		s.add(Implies( True, ( NAME1 ) == ( A_NAME0 ) ))
		s.add(True)
		s.add(Implies( True, ( SURNAME1 ) == ( A_SURNAME0 ) ))
		s.add(True)
		s.add(Implies( True, ( STREET1 ) == ( A_STREET0 ) ))
		s.add(True)
		s.add(Implies( True, ( HOUSE_NUMBER1 ) == ( A_HOUSE_NUMBER0 ) ))
		s.add(True)
		s.add(Implies( True, ( APARTMENT_NUMBER1 ) == ( A_APARTMENT_NUMBER0 ) ))
		s.add(True)
		s.add(Implies( True, ( POSTAL_CODE1 ) == ( A_POSTAL_CODE0 ) ))
		s.add(True)
		s.add(Implies( True, ( CITY1 ) == ( A_CITY0 ) ))
		s.add(True)
		s.add(Implies( True, ( PROVINCE1 ) == ( A_PROVINCE0 ) ))
		s.add(True)
		s.add(Implies( True, ( COUNTRY_ID1 ) == ( V_COUNTRY_ID0 ) ))
		s.add(True)
		s.add(Implies( True, ( CAR_LICENSE_NUMBER1 ) == ( A_CAR_LICENSE_NUMBER0 ) ))
		s.add(True)
		s.add(Implies( True, ( WAREHOUSE_ID1 ) == ( A_WAREHOUSE_ID0 ) ))
		s.add(True)
		s.add(Implies( True, ( PHONE_NUMBER1 ) == ( A_PHONE_NUMBER0 ) ))
		s.add(True)
		s.add(Implies( True, ( SALARY1 ) == ( A_SALARY0 ) ))
		s.add(True)
		s.add(Implies( True, ( CONTRACT_TYPE1 ) == ( V_CONTRACT_TYPE_ID0 ) ))
		s.add(True)
		s.add(Implies( True, ( CONTRACT_START1 ) == ( V_CONTRACT_START1 ) ))
		s.add(True)
		s.add(Implies( True, ( COURIER_ID1 ) == ( V_COURIER_ID3 ) ))
		s.add(True)
		s.add(Implies( True, ( DRIVING_LICENSE_CATEGORY_ID ) == ( V_DRIVING_LICENSE_CATEGORY_ID0 ) ))
		s.add( Not( And( Implies( True, And( MAX_ID0 > 0, ID0 > 0 ) ), And( Implies( True, ( GET_MAX_COURIER_ID1 ) == ( MAX_ID0 ) ), And( Implies( True, ( GET_MAX_COURIER_ID1 ) == ( V_COURIER_ID1 ) ), And( Implies( True, ( V_COURIER_ID2 ) == ( ( 1 ) ) ), And( Implies( True, V_COURIER_ID3 == V_COURIER_ID2 ), And( Implies( True, ( V_COURIER_ID4 ) == ( ( V_COURIER_ID1 + 1 ) ) ), And( Implies( True, V_COURIER_ID3 == V_COURIER_ID4 ), And( Implies( True, ( V_CONTRACT_START1 ) == ( ( CURRENT_DATE0 ) ) ), And( Implies( True, ( ID1 ) == ( V_COURIER_ID3 ) ), And( Implies( True, ( PESEL1 ) == ( A_PESEL0 ) ), And( Implies( True, ( NAME1 ) == ( A_NAME0 ) ), And( Implies( True, ( SURNAME1 ) == ( A_SURNAME0 ) ), And( Implies( True, ( STREET1 ) == ( A_STREET0 ) ), And( Implies( True, ( HOUSE_NUMBER1 ) == ( A_HOUSE_NUMBER0 ) ), And( Implies( True, ( APARTMENT_NUMBER1 ) == ( A_APARTMENT_NUMBER0 ) ), And( Implies( True, ( POSTAL_CODE1 ) == ( A_POSTAL_CODE0 ) ), And( Implies( True, ( CITY1 ) == ( A_CITY0 ) ), And( Implies( True, ( PROVINCE1 ) == ( A_PROVINCE0 ) ), And( Implies( True, ( COUNTRY_ID1 ) == ( V_COUNTRY_ID0 ) ), And( Implies( True, ( CAR_LICENSE_NUMBER1 ) == ( A_CAR_LICENSE_NUMBER0 ) ), And( Implies( True, ( WAREHOUSE_ID1 ) == ( A_WAREHOUSE_ID0 ) ), And( Implies( True, ( PHONE_NUMBER1 ) == ( A_PHONE_NUMBER0 ) ), And( Implies( True, ( SALARY1 ) == ( A_SALARY0 ) ), And( Implies( True, ( CONTRACT_TYPE1 ) == ( V_CONTRACT_TYPE_ID0 ) ), And( Implies( True, ( CONTRACT_START1 ) == ( V_CONTRACT_START1 ) ), And( Implies( True, ( COURIER_ID1 ) == ( V_COURIER_ID3 ) ), And( Implies( True, ( DRIVING_LICENSE_CATEGORY_ID ) == ( V_DRIVING_LICENSE_CATEGORY_ID0 ) ), And( MAX_ID0 > 0, ID1 > 0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )

		print()
		print("%%%%%%%%%% Aggregate Formula %%%%%%%%%%\n", s)
		self.finalFormula = str(s)
		print()
		print("%%%%%%%%%% Satisfiability %%%%%%%%%%")

		self.satisfiability = str(s.check())
		if self.satisfiability == "sat":
			print()
			print("-------->> Violation Occurred...")
			self.satisfiability = "Unsatisfiable"
			print()
			print("%%%%%%%%%% An Instance for which Violation Occurred %%%%%%%%%%\n", s.model())
			self.modelForViolation = str(s.model())
		elif self.satisfiability == "unsat":
			print()
			print("-------->> NO Violation Detected so far...")
			self.satisfiability = "Satisfiable"
			print()
		print()
