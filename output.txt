[ 0 1 2 3 4 5 6 7 [ if_8 [ 9 10 11 [ if_12 [ 13  ] [ elsif_14 [ 15  ] ] [ elsif_16 [ 17  ] ] [ 18  ]  ]  ]  [ 19 ]  ] 20 21  ]
1  -->  A_TYPEINVARCHAR
2  -->  V_TYPE_IDNUMBER;
3  -->  CURSORGET_TYPE_IDISSELECTIDFROMPARCEL_TYPEWHERETYPE=A_TYPE;
4  -->  CURSORGET_MAX_TYPE_IDISSELECTMAX_IDFROMPARCEL_TYPE;
5  -->  OPENGET_TYPE_ID
6  -->  FETCHGET_TYPE_IDINTOV_TYPE_ID
7  -->  CLOSEGET_TYPE_ID
8  -->  V_TYPE_IDISNULL
9  -->  OPENGET_MAX_TYPE_ID
10  -->  FETCHGET_MAX_TYPE_IDINTOV_TYPE_ID
11  -->  CLOSEGET_MAX_TYPE_ID
12  -->  V_TYPE_IDISNULL
13  -->  V_TYPE_ID:=1
14  -->  V_TYPE_IDISNULL
15  -->  V_TYPE_ID:=2
16  -->  V_TYPE_IDISNULL
17  -->  V_TYPE_ID:=3
18  -->  V_TYPE_ID:=V_TYPE_ID+1
20  -->  INSERTINTOPARCEL_TYPE(ID,TYPE)VALUES(V_TYPE_ID,A_TYPE)
21  -->  V_TYPE_ID:=V_TYPE_ID+3


 # dot file created at runtime

digraph G {
	start -> 0;
	0 -> 1 ;
	1 -> 2 ;
	2 -> 3 ;
	3 -> 4 ;
	4 -> 5 ;
	5 -> 6 ;
	6 -> 7 ;
	8 [shape=diamond, color=orange] ;
	9 -> 10 ;
	10 -> 11 ;
	12 [shape=diamond, color=orange] ;
	12 -> 13 ;
	14 [shape=diamond, color=orange] ;
	12 -> 14 ;
	14 -> 15 ;
	16 [shape=diamond, color=orange] ;
	14 -> 16 ;
	16 -> 17 ;
	16 -> 18 ;
	11 -> 12 ;
	8 -> 9 ;
	8 -> 19 ;
	7 -> 8 ;
	18 -> 20 ;
	19 -> 20 ;
	17 -> 20 ;
	15 -> 20 ;
	13 -> 20 ;
	20 -> 21 ;
	21 -> exit;

	start [shape=Msquare, color=green];
	exit [shape=Msquare, color=red];
}
0  --> 1 	parents : 
1  --> 2 	parents : 0 	
2  --> 3 	parents : 1 	
3  --> 4 	parents : 2 	
4  --> 5 	parents : 3 	
5  --> 6 	parents : 4 	
6  --> 7 	parents : 5 	
7  --> 8 	parents : 6 	
8  --> 9 	19 	parents : 7 	
9  --> 10 	parents : 8 	
10  --> 11 	parents : 9 	
11  --> 12 	parents : 10 	
12  --> 13 	14 	parents : 11 	
13  --> 20 	parents : 12 	
14  --> 16 	15 	parents : 12 	
15  --> 20 	parents : 14 	
16  --> 17 	18 	parents : 14 	
17  --> 20 	parents : 16 	
18  --> 20 	parents : 16 	
19  --> 20 	parents : 8 	
20  --> 21 	parents : 13 	15 	17 	18 	19 	
21  --> parents : 20 	
Dominator set ended----------->


Strictly Dominator set ended ----------->


Immediate Dominator ended ----------->


{}
{}
@@@@@@@ stack  {'A_TYPE': [0], 'V_TYPE_ID': [0, 1, 2, 3], 'GET_TYPE_ID': [0, 1], 'TYPE': [0], 'ID': [0], 'MAX_ID': [0], 'GET_MAX_TYPE_ID': [0, 1]}
@@@@@@@ counters  {'MAX_ID': 1, 'GET_TYPE_ID': 2, 'A_TYPE': 1, 'TYPE': 1, 'ID': 1, 'V_TYPE_ID': 4, 'GET_MAX_TYPE_ID': 2}
@@@@@@@ versionedPhiNode  {'V_TYPE_ID': [[], [{13: '', 15: '', 17: '', 18: '', 19: ''}]]}
@@@@@@@ stack  {'A_TYPE': [0], 'V_TYPE_ID': [0, 1, 2, 6], 'GET_TYPE_ID': [0, 1], 'TYPE': [0], 'ID': [0], 'MAX_ID': [0], 'GET_MAX_TYPE_ID': [0, 1]}
@@@@@@@ counters  {'MAX_ID': 2, 'GET_TYPE_ID': 2, 'A_TYPE': 1, 'TYPE': 2, 'ID': 2, 'V_TYPE_ID': 7, 'GET_MAX_TYPE_ID': 2}
@@@@@@@ versionedPhiNode  {'V_TYPE_ID': [['V_TYPE_ID4'], [{13: 'V_TYPE_ID3', 15: '', 17: '', 18: '', 19: ''}]]}
@@@@@@@ stack  {'A_TYPE': [0], 'V_TYPE_ID': [0, 1, 2, 7], 'GET_TYPE_ID': [0, 1], 'TYPE': [0], 'ID': [0], 'MAX_ID': [0], 'GET_MAX_TYPE_ID': [0, 1]}
@@@@@@@ counters  {'MAX_ID': 2, 'GET_TYPE_ID': 2, 'A_TYPE': 1, 'TYPE': 2, 'ID': 2, 'V_TYPE_ID': 8, 'GET_MAX_TYPE_ID': 2}
@@@@@@@ versionedPhiNode  {'V_TYPE_ID': [['V_TYPE_ID4'], [{13: 'V_TYPE_ID3', 15: '', 17: 'V_TYPE_ID6', 18: '', 19: ''}]]}
@@@@@@@ stack  {'A_TYPE': [0], 'V_TYPE_ID': [0, 1, 2, 8], 'GET_TYPE_ID': [0, 1], 'TYPE': [0], 'ID': [0], 'MAX_ID': [0], 'GET_MAX_TYPE_ID': [0, 1]}
@@@@@@@ counters  {'MAX_ID': 2, 'GET_TYPE_ID': 2, 'A_TYPE': 1, 'TYPE': 2, 'ID': 2, 'V_TYPE_ID': 9, 'GET_MAX_TYPE_ID': 2}
@@@@@@@ versionedPhiNode  {'V_TYPE_ID': [['V_TYPE_ID4'], [{13: 'V_TYPE_ID3', 15: '', 17: 'V_TYPE_ID6', 18: 'V_TYPE_ID7', 19: ''}]]}
@@@@@@@ stack  {'A_TYPE': [0], 'V_TYPE_ID': [0, 1], 'GET_TYPE_ID': [0, 1], 'TYPE': [0], 'ID': [0], 'MAX_ID': [0], 'GET_MAX_TYPE_ID': [0, 1]}
@@@@@@@ counters  {'MAX_ID': 2, 'GET_TYPE_ID': 2, 'A_TYPE': 1, 'TYPE': 2, 'ID': 2, 'V_TYPE_ID': 9, 'GET_MAX_TYPE_ID': 2}
@@@@@@@ versionedPhiNode  {'V_TYPE_ID': [['V_TYPE_ID4'], [{13: 'V_TYPE_ID3', 15: 'V_TYPE_ID8', 17: 'V_TYPE_ID6', 18: 'V_TYPE_ID7', 19: ''}]]}


------------------------------
id =  0
next :  {1}
parent :  set()
domSet :  {0}
sDomSet :  set()
iDom :  None
DFSet :  set()
phiNode :  {}
variableSet :  set()
variableLHS :  {}
variableRHS :  set()
versionedPhiNode :  {}
versionedRHS :  {}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  
---stringSsa :  
------------------------------
id =  1
next :  {2}
parent :  {0}
domSet :  {0, 1}
sDomSet :  {0}
iDom :  0
DFSet :  set()
phiNode :  {}
variableSet :  {'A_TYPE'}
variableLHS :  {}
variableRHS :  {'A_TYPE'}
versionedPhiNode :  {}
versionedRHS :  {'A_TYPE': 'A_TYPE0'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  A_TYPE IN VARCHAR 
---stringSsa :  A_TYPE0 IN VARCHAR
------------------------------
id =  2
next :  {3}
parent :  {1}
domSet :  {0, 1, 2}
sDomSet :  {0, 1}
iDom :  1
DFSet :  set()
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID0'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  V_TYPE_ID NUMBER ; 
---stringSsa :  V_TYPE_ID0 NUMBER
------------------------------
id =  3
next :  {4}
parent :  {2}
domSet :  {0, 1, 2, 3}
sDomSet :  {0, 1, 2}
iDom :  2
DFSet :  set()
phiNode :  {}
variableSet :  {'GET_TYPE_ID', 'A_TYPE', 'TYPE', 'ID', 'MAX_ID'}
variableLHS :  {'GET_TYPE_ID'}
variableRHS :  {'A_TYPE', 'TYPE', 'ID', 'MAX_ID'}
versionedPhiNode :  {}
versionedRHS :  {'A_TYPE': 'A_TYPE0', 'TYPE': 'TYPE0', 'ID': 'ID0', 'MAX_ID': 'MAX_ID0'}
versionedLHS :  {'GET_TYPE_ID': 'GET_TYPE_ID1'}
destructedPhi :  {}
---oldString :  CURSOR GET_TYPE_ID IS SELECT ID FROM PARCEL_TYPE WHERE TYPE = A_TYPE ; 
---stringSsa :  CURSOR GET_TYPE_ID1 IS SELECT ID0 FROM PARCEL_TYPE WHERE TYPE0 = A_TYPE0 
------------------------------
id =  4
next :  {5}
parent :  {3}
domSet :  {0, 1, 2, 3, 4}
sDomSet :  {0, 1, 2, 3}
iDom :  3
DFSet :  set()
phiNode :  {}
variableSet :  {'ID', 'GET_MAX_TYPE_ID', 'MAX_ID', 'TYPE'}
variableLHS :  {'GET_MAX_TYPE_ID'}
variableRHS :  {'ID', 'MAX_ID', 'TYPE'}
versionedPhiNode :  {}
versionedRHS :  {'ID': 'ID0', 'MAX_ID': 'MAX_ID0', 'TYPE': 'TYPE0'}
versionedLHS :  {'GET_MAX_TYPE_ID': 'GET_MAX_TYPE_ID1'}
destructedPhi :  {}
---oldString :  CURSOR GET_MAX_TYPE_ID IS SELECT MAX_ID FROM PARCEL_TYPE ; 
---stringSsa :  CURSOR GET_MAX_TYPE_ID1 IS SELECT MAX_ID0 FROM PARCEL_TYPE 
------------------------------
id =  5
next :  {6}
parent :  {4}
domSet :  {0, 1, 2, 3, 4, 5}
sDomSet :  {0, 1, 2, 3, 4}
iDom :  4
DFSet :  set()
phiNode :  {}
variableSet :  {'GET_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'GET_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'GET_TYPE_ID': 'GET_TYPE_ID1'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  OPEN GET_TYPE_ID 
---stringSsa :  OPEN GET_TYPE_ID1 
------------------------------
id =  6
next :  {7}
parent :  {5}
domSet :  {0, 1, 2, 3, 4, 5, 6}
sDomSet :  {0, 1, 2, 3, 4, 5}
iDom :  5
DFSet :  set()
phiNode :  {}
variableSet :  {'V_TYPE_ID', 'GET_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  {'GET_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'GET_TYPE_ID': 'GET_TYPE_ID1'}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID1'}
destructedPhi :  {}
---oldString :  FETCH GET_TYPE_ID INTO V_TYPE_ID 
---stringSsa :  FETCH GET_TYPE_ID1 INTO V_TYPE_ID1 
------------------------------
id =  7
next :  {8}
parent :  {6}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7}
sDomSet :  {0, 1, 2, 3, 4, 5, 6}
iDom :  6
DFSet :  set()
phiNode :  {}
variableSet :  {'GET_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'GET_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'GET_TYPE_ID': 'GET_TYPE_ID1'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  CLOSE GET_TYPE_ID 
---stringSsa :  CLOSE GET_TYPE_ID1 
------------------------------
id =  8
next :  {9, 19}
parent :  {7}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7}
iDom :  7
DFSet :  set()
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID1'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  V_TYPE_ID IS NULL 
---stringSsa :  V_TYPE_ID1 IS NULL 
------------------------------
id =  9
next :  {10}
parent :  {8}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8}
iDom :  8
DFSet :  {20}
phiNode :  {}
variableSet :  {'GET_MAX_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'GET_MAX_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'GET_MAX_TYPE_ID': 'GET_MAX_TYPE_ID1'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  OPEN GET_MAX_TYPE_ID 
---stringSsa :  OPEN GET_MAX_TYPE_ID1 
------------------------------
id =  10
next :  {11}
parent :  {9}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
iDom :  9
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID', 'GET_MAX_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  {'GET_MAX_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'GET_MAX_TYPE_ID': 'GET_MAX_TYPE_ID1'}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID2'}
destructedPhi :  {}
---oldString :  FETCH GET_MAX_TYPE_ID INTO V_TYPE_ID 
---stringSsa :  FETCH GET_MAX_TYPE_ID1 INTO V_TYPE_ID2 
------------------------------
id =  11
next :  {12}
parent :  {10}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
iDom :  10
DFSet :  {20}
phiNode :  {}
variableSet :  {'GET_MAX_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'GET_MAX_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'GET_MAX_TYPE_ID': 'GET_MAX_TYPE_ID1'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  CLOSE GET_MAX_TYPE_ID 
---stringSsa :  CLOSE GET_MAX_TYPE_ID1 
------------------------------
id =  12
next :  {13, 14}
parent :  {11}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}
iDom :  11
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID2'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  V_TYPE_ID IS NULL 
---stringSsa :  V_TYPE_ID2 IS NULL 
------------------------------
id =  13
next :  {20}
parent :  {12}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
iDom :  12
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  set()
versionedPhiNode :  {}
versionedRHS :  {}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID3'}
destructedPhi :  {'V_TYPE_ID': ('V_TYPE_ID4', 'V_TYPE_ID3')}
---oldString :  V_TYPE_ID := 1 
---stringSsa :  V_TYPE_ID3 := 1 
------------------------------
id =  14
next :  {16, 15}
parent :  {12}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
iDom :  12
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID2'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  V_TYPE_ID IS NULL 
---stringSsa :  V_TYPE_ID2 IS NULL 
------------------------------
id =  15
next :  {20}
parent :  {14}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14}
iDom :  14
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  set()
versionedPhiNode :  {}
versionedRHS :  {}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID8'}
destructedPhi :  {'V_TYPE_ID': ('V_TYPE_ID4', 'V_TYPE_ID8')}
---oldString :  V_TYPE_ID := 2 
---stringSsa :  V_TYPE_ID8 := 2 
------------------------------
id =  16
next :  {17, 18}
parent :  {14}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14}
iDom :  14
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID2'}
versionedLHS :  {}
destructedPhi :  {}
---oldString :  V_TYPE_ID IS NULL 
---stringSsa :  V_TYPE_ID2 IS NULL 
------------------------------
id =  17
next :  {20}
parent :  {16}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16}
iDom :  16
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  set()
versionedPhiNode :  {}
versionedRHS :  {}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID6'}
destructedPhi :  {'V_TYPE_ID': ('V_TYPE_ID4', 'V_TYPE_ID6')}
---oldString :  V_TYPE_ID := 3 
---stringSsa :  V_TYPE_ID6 := 3 
------------------------------
id =  18
next :  {20}
parent :  {16}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16}
iDom :  16
DFSet :  {20}
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID2'}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID7'}
destructedPhi :  {'V_TYPE_ID': ('V_TYPE_ID4', 'V_TYPE_ID7')}
---oldString :  V_TYPE_ID := V_TYPE_ID + 1 
---stringSsa :  V_TYPE_ID7 := V_TYPE_ID2 + 1 
------------------------------
id =  19
next :  {20}
parent :  {8}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 19}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8}
iDom :  8
DFSet :  {20}
phiNode :  {}
variableSet :  set()
variableLHS :  {}
variableRHS :  set()
versionedPhiNode :  {}
versionedRHS :  {}
versionedLHS :  {}
destructedPhi :  {'V_TYPE_ID': ('V_TYPE_ID4', 'V_TYPE_ID1')}
---oldString :  
---stringSsa :  
------------------------------
id =  20
next :  {21}
parent :  {13, 15, 17, 18, 19}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 20}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8}
iDom :  8
DFSet :  set()
phiNode :  {'V_TYPE_ID': [['V_TYPE_ID'], ['V_TYPE_ID', 'V_TYPE_ID', 'V_TYPE_ID', 'V_TYPE_ID', 'V_TYPE_ID']]}
variableSet :  {'MAX_ID', 'TYPE', 'ID', 'V_TYPE_ID', 'A_TYPE'}
variableLHS :  {'ID', 'MAX_ID', 'TYPE'}
variableRHS :  {'V_TYPE_ID', 'A_TYPE'}
versionedPhiNode :  {'V_TYPE_ID': [['V_TYPE_ID4'], [{13: 'V_TYPE_ID3', 15: 'V_TYPE_ID8', 17: 'V_TYPE_ID6', 18: 'V_TYPE_ID7', 19: 'V_TYPE_ID1'}]]}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID4', 'A_TYPE': 'A_TYPE0'}
versionedLHS :  {'MAX_ID': 'MAX_ID1', 'TYPE': 'TYPE1', 'ID': 'ID1'}
destructedPhi :  {}
---oldString :  INSERT INTO PARCEL_TYPE ( ID , TYPE ) VALUES ( V_TYPE_ID , A_TYPE ) 
---stringSsa :  INSERT INTO PARCEL_TYPE ( ID1 , TYPE1 ) VALUES ( V_TYPE_ID4 , A_TYPE0 ) 
------------------------------
id =  21
next :  set()
parent :  {20}
domSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 20, 21}
sDomSet :  {0, 1, 2, 3, 4, 5, 6, 7, 8, 20}
iDom :  20
DFSet :  set()
phiNode :  {}
variableSet :  {'V_TYPE_ID'}
variableLHS :  {'V_TYPE_ID'}
variableRHS :  {'V_TYPE_ID'}
versionedPhiNode :  {}
versionedRHS :  {'V_TYPE_ID': 'V_TYPE_ID4'}
versionedLHS :  {'V_TYPE_ID': 'V_TYPE_ID5'}
destructedPhi :  {}
---oldString :  V_TYPE_ID := V_TYPE_ID + 3 
---stringSsa :  V_TYPE_ID5 := V_TYPE_ID4 + 3 
