# This file was generated at runtime on 2019-03-10 11:33:54.595568
from z3 import *

class Z3RuntimeCnfFile():
	def __init__(self):
		self.finalFormula = ""
		self.satisfiability = ""
		self.modelForViolation = ""

	def execute(self):
		AVG_E0 = Real('AVG_E0')
		B2 = Real('B2')
		C3 = Real('C3')
		A2 = Real('A2')
		B0 = Real('B0')
		D3 = Real('D3')
		MY_MAX1 = Real('MY_MAX1')
		J1 = Real('J1')
		D0 = Real('D0')
		F0 = Real('F0')
		MAX_F0 = Real('MAX_F0')
		B1 = Real('B1')
		J2 = Real('J2')
		L0 = Real('L0')
		G0 = Real('G0')
		MAX_A0 = Real('MAX_A0')
		A0 = Real('A0')
		F1 = Real('F1')
		L2 = Real('L2')
		H2 = Real('H2')
		D2 = Real('D2')
		C0 = Real('C0')
		L1 = Real('L1')
		A1 = Real('A1')
		G1 = Real('G1')
		M0 = Real('M0')
		C2 = Real('C2')
		F2 = Real('F2')
		X1 = Real('X1')
		J0 = Real('J0')
		K0 = Real('K0')
		MY_MAX0 = Real('MY_MAX0')
		Y1 = Real('Y1')
		H1 = Real('H1')
		A3 = Real('A3')
		U0 = Real('U0')
		E0 = Real('E0')
		H0 = Real('H0')
		B3 = Real('B3')
		C1 = Real('C1')
		D1 = Real('D1')

		s = Solver()
		s.add(True)
		s.add(Implies( True, And( ( G1 ) == ( MAX_A0 ), And( A0 >= M0 + 5, And( C0 == G0, D0 >= 50 ) ) ) ))
		s.add(True)
		s.add(Implies( True, And( A0 > 15, J0 > 15 ) ))
		s.add(True)
		s.add(Implies( True, ( G1 ) == ( MY_MAX1 ) ))
		s.add(True)
		s.add(Implies( True, And( ( X1 ) == ( AVG_E0 ), And( And( E0 >= M0 + 5, C0 < 99 ), And( B0 == D0, G1 == H0 ) ) ) ))
		s.add(True)
		s.add(Implies( True, And( ( Y1 ) == ( MAX_F0 ), And( And( E0 >= M0 + 5, C0 < 99 ), And( B0 == D0, G1 == H0 ) ) ) ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, Or( And( And( ( J1 ) == ( J0 * ( X1 - 9 ) ), ( F1 ) == ( Y1 - 9 ) ), And( J0 > 10, F0 <= ( X1 + Y1 ) ) ), And( Not( And( J0 > 10, F0 <= ( X1 + Y1 ) ) ), And( ( J1 ) == ( J0 ), ( F1 ) == ( F0 ) ) ) ) ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, B1 == B0 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, F2 == F1 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, A1 == A0 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, D1 == D0 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, C1 == C0 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, J2 == J1 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, H2 == H1 ))
		s.add(MY_MAX1 > Y1)
		s.add(Implies( MY_MAX1 > Y1, L2 == L1 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), Or( And( And( ( A2 ) == ( A0 * ( X1 - 9 ) ), ( B2 ) == ( Y1 - 9 ) ), And( A0 > 10, B0 <= ( X1 + Y1 ) ) ), And( Not( And( A0 > 10, B0 <= ( X1 + Y1 ) ) ), And( ( A2 ) == ( A0 ), ( B2 ) == ( B0 ) ) ) ) ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), B1 == B2 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), F2 == F0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), A1 == A2 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), D1 == D2 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), C1 == C2 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), J2 == J0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), H2 == H0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), L2 == L0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), ( A3 ) == ( MY_MAX1 - X1 ) ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), ( B3 ) == ( MY_MAX1 - Y1 ) ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), ( C3 ) == ( Y1 * ( X1 - 2 ) ) ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), B1 == B3 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), F2 == F0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), A1 == A3 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), D1 == D3 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), C1 == C3 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), J2 == J0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), H2 == H0 ))
		s.add(And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ))
		s.add(Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), L2 == L0 ))
		s.add( Not( And( Implies( True, And( ( G1 ) == ( MAX_A0 ), And( A0 >= M0 + 5, And( C0 == G0, D0 >= 50 ) ) ) ), And( Implies( True, And( A0 > 15, J0 > 15 ) ), And( Implies( True, ( G1 ) == ( MY_MAX1 ) ), And( Implies( True, And( ( X1 ) == ( AVG_E0 ), And( And( E0 >= M0 + 5, C0 < 99 ), And( B0 == D0, G1 == H0 ) ) ) ), And( Implies( True, And( ( Y1 ) == ( MAX_F0 ), And( And( E0 >= M0 + 5, C0 < 99 ), And( B0 == D0, G1 == H0 ) ) ) ), And( Implies( MY_MAX1 > Y1, Or( And( And( ( J1 ) == ( J0 * ( X1 - 9 ) ), ( F1 ) == ( Y1 - 9 ) ), And( J0 > 10, F0 <= ( X1 + Y1 ) ) ), And( Not( And( J0 > 10, F0 <= ( X1 + Y1 ) ) ), And( ( J1 ) == ( J0 ), ( F1 ) == ( F0 ) ) ) ) ), And( Implies( MY_MAX1 > Y1, B1 == B0 ), And( Implies( MY_MAX1 > Y1, F2 == F1 ), And( Implies( MY_MAX1 > Y1, A1 == A0 ), And( Implies( MY_MAX1 > Y1, D1 == D0 ), And( Implies( MY_MAX1 > Y1, C1 == C0 ), And( Implies( MY_MAX1 > Y1, J2 == J1 ), And( Implies( MY_MAX1 > Y1, H2 == H1 ), And( Implies( MY_MAX1 > Y1, L2 == L1 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), Or( And( And( ( A2 ) == ( A0 * ( X1 - 9 ) ), ( B2 ) == ( Y1 - 9 ) ), And( A0 > 10, B0 <= ( X1 + Y1 ) ) ), And( Not( And( A0 > 10, B0 <= ( X1 + Y1 ) ) ), And( ( A2 ) == ( A0 ), ( B2 ) == ( B0 ) ) ) ) ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), B1 == B2 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), F2 == F0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), A1 == A2 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), D1 == D2 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), C1 == C2 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), J2 == J0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), H2 == H0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), MY_MAX1 < Y1 ), L2 == L0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), ( A3 ) == ( MY_MAX1 - X1 ) ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), ( B3 ) == ( MY_MAX1 - Y1 ) ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), ( C3 ) == ( Y1 * ( X1 - 2 ) ) ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), B1 == B3 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), F2 == F0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), A1 == A3 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), D1 == D3 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), C1 == C3 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), J2 == J0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), H2 == H0 ), And( Implies( And( Not( MY_MAX1 > Y1 ), Not( MY_MAX1 < Y1 ) ), L2 == L0 ), And( A1 > 0, J2 > 10 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )

		self.finalFormula = str(s)
		self.satisfiability = str(s.check())
		if self.satisfiability == "sat":
			self.satisfiability = "Unsatisfiable"
			self.modelForViolation = str(s.model())
		elif self.satisfiability == "unsat":
			self.satisfiability = "Satisfiable"